# Railway-optimized Dockerfile for Code Evolution Tracker
FROM python:3.11-slim

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    libpq-dev \
    netcat-openbsd \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies (use Railway-optimized requirements)
COPY backend/requirements.railway.txt ./requirements.txt
COPY backend/rds-combined-ca-bundle.pem /app/certs/rds-combined-ca-bundle.pem
ENV SSL_CERT_FILE=/app/certs/rds-combined-ca-bundle.pem
RUN pip install --no-cache-dir -r requirements.txt

# Copy application code from backend directory
COPY backend/ .

# Create directories for ChromaDB and ensure proper permissions
RUN mkdir -p /tmp/chroma_db && \
    chmod 755 /tmp/chroma_db

# Make wait script executable
RUN chmod +x /app/wait_for_services.sh

# Expose port (Railway will set PORT env var)
EXPOSE 8080

# Health check for Railway
HEALTHCHECK --interval=30s --timeout=5s --start-period=10s --retries=3 \
    CMD sh -c 'curl -fsS http://127.0.0.1:${PORT:-8080}/health || exit 1'

# Set Railway environment variable for ChromaDB detection
ENV RAILWAY_ENVIRONMENT=1

# Default command: wait for dependencies then start uvicorn
ENTRYPOINT ["/app/wait_for_services.sh"]
CMD ["sh", "-c", "uvicorn app.main:app --host 0.0.0.0 --port ${PORT:-8080} --proxy-headers"]
